text(x2,y1-delta*3,"© Eurogeographics association for administrative boundaries",adj = c(1,1),cex=0.11)
text(3200000,1300000,"© UMS RIATE, FIT project, 2014",adj = c(0,1),cex=0.15,col="#111111")
# LOGOS
AddPng("mapkit/images/discalmer_ESPON.png",5826700,3000000,2200)
AddPng("mapkit/images/logo_ESPON.png",2650000,y1,2200)
AddPng("mapkit/images/discalmer_EU.png",x1,1020000,2200)
AddPng("mapkit/images/scale.png",5880000,1250000,2200)
dev.off()
library(maptools)
library(RColorBrewer)
library(classInt)
library(png)
setwd("/home/nlambert/Documents/R/func-i")
rm(list=ls())
# ----------------------------------------------------------------------------
# InitMap - crée une nouvelle fenetre graphique avec des parametres à définir
# ----------------------------------------------------------------------------
initmap<-function(shp,title,sources){
#margin<-150000
#y1<-1108037
#y2<-5472735-1600000
margin<-150000
y1<-2108037
y2<-5472735-1600000
x1<-2477834+margin
x2<-6689431-margin
#plot(countries, border="#3C3C3B", col="#3C3C3B",xlim=c(x1,x2), ylim=c(y1,y2), asp = 1,type = "n")
par(omi=c(0,0,0,0), mgp=c(0,0,0),mar=c(0,0,0,0) , family = "D")
par(mfrow=c(1,1),cex=1,cex.lab = 0.75,cex.main=0.2,cex.axis=0.2)
plot.new()
layer <- readShapeSpatial(shp)
plot(layer, col="#FFFFFF00",border="#FFFFFF00",xlim=c(x1,x2), ylim=c(y1,y2))
#title(main=title,sub=sources,cex.sub=0.7)
}
# ----------------------------------------------------------------------------
# addlayer - ajout de couches statiques
# ----------------------------------------------------------------------------
addlayer<-function(shp,colorstroke="black",color="blue",thickness=1){
layer <- readShapeSpatial(shp)
if(getinfo.shape(shp)[2]=="5"){plot(layer, border=colorstroke, col=color, lwd=thickness,add=T)}else{} #poly
if(getinfo.shape(shp)[2]=="3"){plot(layer, col=color, lwd=thickness,add=T)}else{} #line
if(getinfo.shape(shp)[2]=="1"){points(layer,cex = 0.1, pch=16, add=T)}else{} #dot
return(getinfo.shape(shp)[2])
}
# ----------------------------------------------------------------------------
# AddJpeg - ajout d'e couches statiques d'images sur un plot
# ----------------------------------------------------------------------------
AddPng<-function(png,x,y,coef)
{
pic <- readPNG(png)
posx <- x
posy <- y
coef <- coef
xsize <-dim (pic)[2] * coef
yisze <-dim (pic)[1] * coef
rasterImage(pic, posx, posy, posx+xsize, posy+yisze)
}
# CREATION DE LA CARTE
imgWidth <-565
imgHeight <-660
coef <-1
resolution <-300
#png(filename="maps/emptymap.png", width=imgWidth*coef, height=imgHeight*coef, res=resolution,pointsize = 12)
#png(filename="maps/emptymap_large.png", width=565*3, height=660*3, res=300,pointsize = 12*3,units="px")
initmap(shp="mapkit/background.shp","Func-i","eurostat, 2014")
# BOTTOM
addlayer(shp="mapkit/background.shp",colorstroke="#6E6E6E00",color="#E3E8F7")
addlayer(shp="mapkit/stripes.shp",colorstroke="#E3E8F700",color="#000099")
addlayer(shp="mapkit/other_countries.shp",colorstroke="#FFFFFF",color="#E6DED4",thickness=0.2)
addlayer(shp="mapkit/remote_area_background.shp",colorstroke="#6E6E6E00",color="#E3E8F7")
addlayer(shp="mapkit/other_territories_remote_areas.shp",colorstroke="#FFFFFF",color="#E6DED4",thickness=0.2)
# REPRESENTATION DE LA DONNEE --------------------------------------------------------------------------
fdc <- readShapeSpatial("mapkit/NUTS3_RG_20M_2006.shp")
plot(fdc, col="orange",border="#FFFFFF80",lwd=0.07, add=T)
# -----------------------------------------------------------------------------------------------------
# TOP
#addlayer(shp="mapkit/cyprus_non_espon_space.shp",colorstroke="#FFFFFF",color="#FFFFFF",thickness=0.5)
addlayer(shp="mapkit/boundaries.shp",color="#FFFFFF",thickness=0.2)
addlayer(shp="mapkit/kosovo_line.shp",color="#FFFFFF50",thickness=0.2)
addlayer("mapkit/coasts.shp",color="#D1DBF2",thickness=0.15)
addlayer(shp="mapkit/remote_area_background.shp",colorstroke="#6E6E6E",color="#E3E8F700",thickness=0.2)
addlayer(shp="mapkit/background.shp",colorstroke="#6E6E6E",color="#E3E8F700",thickness=0.2)
addlayer(shp="mapkit/capital_cities_2006.shp")
# TEXTES
# 1 - labels
labels <- read.csv( "mapkit/labels.csv",header=TRUE,sep=",",dec=",",encoding="utf-8")
text(labels$x, labels$y , labels = labels$name,cex=0.115,col="#000000")
labels <- read.csv( "mapkit/remotes_names.csv",header=TRUE,sep=",",dec=",",encoding="utf-8")
text(labels$x+15000, labels$y+40000 , labels = labels$name,adj = c(0,1),cex=0.08,col="#000000")
fdc <- readShapeSpatial("mapkit/background.shp")
x1 <- bbox(fdc)[1]
y1 <- bbox(fdc)[2]
x2 <- bbox(fdc)[3]
y2 <- bbox(fdc)[4]
delta<-25000
text(x2,y1-delta,"Regional level: NUTS3 2010",adj = c(1,1),cex=0.11)
text(x2,y1-delta*3,"© Eurogeographics association for administrative boundaries",adj = c(1,1),cex=0.11)
text(3200000,1300000,"© UMS RIATE, FIT project, 2014",adj = c(0,1),cex=0.15,col="#111111")
# LOGOS
AddPng("mapkit/images/discalmer_ESPON.png",5826700,3000000,2200)
AddPng("mapkit/images/logo_ESPON.png",2650000,y1,2200)
AddPng("mapkit/images/discalmer_EU.png",x1,1020000,2200)
AddPng("mapkit/images/scale.png",5880000,1250000,2200)
dev.off()
library(maptools)
library(RColorBrewer)
library(classInt)
library(png)
setwd("/home/nlambert/Documents/R/func-i")
rm(list=ls())
# ----------------------------------------------------------------------------
# InitMap - crée une nouvelle fenetre graphique avec des parametres à définir
# ----------------------------------------------------------------------------
initmap<-function(shp,title,sources){
#margin<-150000
#y1<-1108037
#y2<-5472735-1600000
margin<-150000
y1<-2108037
y2<-5472735-1600000
x1<-2477834+margin
x2<-6689431-margin
#plot(countries, border="#3C3C3B", col="#3C3C3B",xlim=c(x1,x2), ylim=c(y1,y2), asp = 1,type = "n")
par(omi=c(0,0,0,0), mgp=c(0,0,0),mar=c(0,0,0,0) , family = "D")
par(mfrow=c(1,1),cex=1,cex.lab = 0.75,cex.main=0.2,cex.axis=0.2)
plot.new()
layer <- readShapeSpatial(shp)
plot(layer, col="#FFFFFF00",border="#FFFFFF00",xlim=c(x1,x2), ylim=c(y1,y2))
#title(main=title,sub=sources,cex.sub=0.7)
}
# ----------------------------------------------------------------------------
# addlayer - ajout de couches statiques
# ----------------------------------------------------------------------------
addlayer<-function(shp,colorstroke="black",color="blue",thickness=1){
layer <- readShapeSpatial(shp)
if(getinfo.shape(shp)[2]=="5"){plot(layer, border=colorstroke, col=color, lwd=thickness,add=T)}else{} #poly
if(getinfo.shape(shp)[2]=="3"){plot(layer, col=color, lwd=thickness,add=T)}else{} #line
if(getinfo.shape(shp)[2]=="1"){points(layer,cex = 0.1, pch=16, add=T)}else{} #dot
return(getinfo.shape(shp)[2])
}
# ----------------------------------------------------------------------------
# AddJpeg - ajout d'e couches statiques d'images sur un plot
# ----------------------------------------------------------------------------
AddPng<-function(png,x,y,coef)
{
pic <- readPNG(png)
posx <- x
posy <- y
coef <- coef
xsize <-dim (pic)[2] * coef
yisze <-dim (pic)[1] * coef
rasterImage(pic, posx, posy, posx+xsize, posy+yisze)
}
# CREATION DE LA CARTE
imgWidth <-565
imgHeight <-660
coef <-1
resolution <-300
png(filename="maps/emptymap.png", width=imgWidth*coef, height=imgHeight*coef, res=resolution,pointsize = 12)
png(filename="maps/emptymap_large.png", width=565*3, height=660*3, res=300,pointsize = 12*3,units="px")
initmap(shp="mapkit/background.shp","Func-i","eurostat, 2014")
# BOTTOM
addlayer(shp="mapkit/background.shp",colorstroke="#6E6E6E00",color="#E3E8F7")
addlayer(shp="mapkit/stripes.shp",colorstroke="#E3E8F700",color="#000099")
addlayer(shp="mapkit/other_countries.shp",colorstroke="#FFFFFF",color="#E6DED4",thickness=0.2)
addlayer(shp="mapkit/remote_area_background.shp",colorstroke="#6E6E6E00",color="#E3E8F7")
addlayer(shp="mapkit/other_territories_remote_areas.shp",colorstroke="#FFFFFF",color="#E6DED4",thickness=0.2)
# REPRESENTATION DE LA DONNEE --------------------------------------------------------------------------
fdc <- readShapeSpatial("mapkit/NUTS3_RG_20M_2006.shp")
plot(fdc, col="orange",border="#FFFFFF80",lwd=0.07, add=T)
# -----------------------------------------------------------------------------------------------------
# TOP
#addlayer(shp="mapkit/cyprus_non_espon_space.shp",colorstroke="#FFFFFF",color="#FFFFFF",thickness=0.5)
addlayer(shp="mapkit/boundaries.shp",color="#FFFFFF",thickness=0.2)
addlayer(shp="mapkit/kosovo_line.shp",color="#FFFFFF50",thickness=0.2)
addlayer("mapkit/coasts.shp",color="#D1DBF2",thickness=0.15)
addlayer(shp="mapkit/remote_area_background.shp",colorstroke="#6E6E6E",color="#E3E8F700",thickness=0.2)
addlayer(shp="mapkit/background.shp",colorstroke="#6E6E6E",color="#E3E8F700",thickness=0.2)
addlayer(shp="mapkit/capital_cities_2006.shp")
# TEXTES
# 1 - labels
labels <- read.csv( "mapkit/labels.csv",header=TRUE,sep=",",dec=",",encoding="utf-8")
text(labels$x, labels$y , labels = labels$name,cex=0.115,col="#000000")
labels <- read.csv( "mapkit/remotes_names.csv",header=TRUE,sep=",",dec=",",encoding="utf-8")
text(labels$x+15000, labels$y+40000 , labels = labels$name,adj = c(0,1),cex=0.08,col="#000000")
fdc <- readShapeSpatial("mapkit/background.shp")
x1 <- bbox(fdc)[1]
y1 <- bbox(fdc)[2]
x2 <- bbox(fdc)[3]
y2 <- bbox(fdc)[4]
delta<-25000
text(x2,y1-delta,"Regional level: NUTS3 2010",adj = c(1,1),cex=0.11)
text(x2,y1-delta*3,"© Eurogeographics association for administrative boundaries",adj = c(1,1),cex=0.11)
text(3200000,1300000,"© UMS RIATE, FIT project, 2014",adj = c(0,1),cex=0.15,col="#111111")
# LOGOS
AddPng("mapkit/images/discalmer_ESPON.png",5826700,3000000,2200)
AddPng("mapkit/images/logo_ESPON.png",2650000,y1,2200)
AddPng("mapkit/images/discalmer_EU.png",x1,1020000,2200)
AddPng("mapkit/images/scale.png",5880000,1250000,2200)
dev.off()
library(maptools)
library(RColorBrewer)
library(classInt)
library(png)
setwd("/home/nlambert/Documents/R/func-i")
rm(list=ls())
# ----------------------------------------------------------------------------
# InitMap - crée une nouvelle fenetre graphique avec des parametres à définir
# ----------------------------------------------------------------------------
initmap<-function(shp,title,sources){
#margin<-150000
#y1<-1108037
#y2<-5472735-1600000
margin<-150000
y1<-2108037
y2<-5472735-1600000
x1<-2477834+margin
x2<-6689431-margin
#plot(countries, border="#3C3C3B", col="#3C3C3B",xlim=c(x1,x2), ylim=c(y1,y2), asp = 1,type = "n")
par(omi=c(0,0,0,0), mgp=c(0,0,0),mar=c(0,0,0,0) , family = "D")
par(mfrow=c(1,1),cex=1,cex.lab = 0.75,cex.main=0.2,cex.axis=0.2)
plot.new()
layer <- readShapeSpatial(shp)
plot(layer, col="#FFFFFF00",border="#FFFFFF00",xlim=c(x1,x2), ylim=c(y1,y2))
title(main=title,sub=sources,cex.sub=0.7)
}
# ----------------------------------------------------------------------------
# addlayer - ajout de couches statiques
# ----------------------------------------------------------------------------
addlayer<-function(shp,colorstroke="black",color="blue",thickness=1){
layer <- readShapeSpatial(shp)
if(getinfo.shape(shp)[2]=="5"){plot(layer, border=colorstroke, col=color, lwd=thickness,add=T)}else{} #poly
if(getinfo.shape(shp)[2]=="3"){plot(layer, col=color, lwd=thickness,add=T)}else{} #line
if(getinfo.shape(shp)[2]=="1"){points(layer,cex = 0.1, pch=16, add=T)}else{} #dot
return(getinfo.shape(shp)[2])
}
# ----------------------------------------------------------------------------
# AddJpeg - ajout d'e couches statiques d'images sur un plot
# ----------------------------------------------------------------------------
AddPng<-function(png,x,y,coef)
{
pic <- readPNG(png)
posx <- x
posy <- y
coef <- coef
xsize <-dim (pic)[2] * coef
yisze <-dim (pic)[1] * coef
rasterImage(pic, posx, posy, posx+xsize, posy+yisze)
}
# CREATION DE LA CARTE
imgWidth <-565
imgHeight <-660
coef <-1
resolution <-300
png(filename="maps/emptymap.png", width=imgWidth*coef, height=imgHeight*coef, res=resolution,pointsize = 12)
png(filename="maps/emptymap_large.png", width=565*3, height=660*3, res=300,pointsize = 12*3,units="px")
initmap(shp="mapkit/background.shp","Func-i","eurostat, 2014")
# BOTTOM
addlayer(shp="mapkit/background.shp",colorstroke="#6E6E6E00",color="#E3E8F7")
addlayer(shp="mapkit/stripes.shp",colorstroke="#E3E8F700",color="#000099")
addlayer(shp="mapkit/other_countries.shp",colorstroke="#FFFFFF",color="#E6DED4",thickness=0.2)
addlayer(shp="mapkit/remote_area_background.shp",colorstroke="#6E6E6E00",color="#E3E8F7")
addlayer(shp="mapkit/other_territories_remote_areas.shp",colorstroke="#FFFFFF",color="#E6DED4",thickness=0.2)
# REPRESENTATION DE LA DONNEE --------------------------------------------------------------------------
fdc <- readShapeSpatial("mapkit/NUTS3_RG_20M_2006.shp")
plot(fdc, col="orange",border="#FFFFFF80",lwd=0.07, add=T)
# -----------------------------------------------------------------------------------------------------
# TOP
#addlayer(shp="mapkit/cyprus_non_espon_space.shp",colorstroke="#FFFFFF",color="#FFFFFF",thickness=0.5)
addlayer(shp="mapkit/boundaries.shp",color="#FFFFFF",thickness=0.2)
addlayer(shp="mapkit/kosovo_line.shp",color="#FFFFFF50",thickness=0.2)
addlayer("mapkit/coasts.shp",color="#D1DBF2",thickness=0.15)
addlayer(shp="mapkit/remote_area_background.shp",colorstroke="#6E6E6E",color="#E3E8F700",thickness=0.2)
addlayer(shp="mapkit/background.shp",colorstroke="#6E6E6E",color="#E3E8F700",thickness=0.2)
addlayer(shp="mapkit/capital_cities_2006.shp")
# TEXTES
# 1 - labels
labels <- read.csv( "mapkit/labels.csv",header=TRUE,sep=",",dec=",",encoding="utf-8")
text(labels$x, labels$y , labels = labels$name,cex=0.115,col="#000000")
labels <- read.csv( "mapkit/remotes_names.csv",header=TRUE,sep=",",dec=",",encoding="utf-8")
text(labels$x+15000, labels$y+40000 , labels = labels$name,adj = c(0,1),cex=0.08,col="#000000")
fdc <- readShapeSpatial("mapkit/background.shp")
x1 <- bbox(fdc)[1]
y1 <- bbox(fdc)[2]
x2 <- bbox(fdc)[3]
y2 <- bbox(fdc)[4]
delta<-25000
text(x2,y1-delta,"Regional level: NUTS3 2010",adj = c(1,1),cex=0.11)
text(x2,y1-delta*3,"© Eurogeographics association for administrative boundaries",adj = c(1,1),cex=0.11)
text(3200000,1300000,"© UMS RIATE, FIT project, 2014",adj = c(0,1),cex=0.15,col="#111111")
# LOGOS
AddPng("mapkit/images/discalmer_ESPON.png",5826700,3000000,2200)
AddPng("mapkit/images/logo_ESPON.png",2650000,y1,2200)
AddPng("mapkit/images/discalmer_EU.png",x1,1020000,2200)
AddPng("mapkit/images/scale.png",5880000,1250000,2200)
dev.off()
library(maptools)
library(RColorBrewer)
library(classInt)
library(png)
setwd("/home/nlambert/Documents/R/func-i")
rm(list=ls())
# ----------------------------------------------------------------------------
# InitMap - crée une nouvelle fenetre graphique avec des parametres à définir
# ----------------------------------------------------------------------------
initmap<-function(shp,title,sources){
#margin<-150000
#y1<-1108037
#y2<-5472735-1600000
margin<-150000
y1<-2108037
y2<-5472735-1600000
x1<-2477834+margin
x2<-6689431-margin
#plot(countries, border="#3C3C3B", col="#3C3C3B",xlim=c(x1,x2), ylim=c(y1,y2), asp = 1,type = "n")
par(omi=c(0,0,0,0), mgp=c(0,0,0),mar=c(0,0,0,0) , family = "D")
par(mfrow=c(1,1),cex=1,cex.lab = 0.75,cex.main=0.2,cex.axis=0.2)
plot.new()
layer <- readShapeSpatial(shp)
plot(layer, col="#FFFFFF00",border="#FFFFFF00",xlim=c(x1,x2), ylim=c(y1,y2))
title(main=title,sub=sources,cex.sub=0.7)
}
# ----------------------------------------------------------------------------
# addlayer - ajout de couches statiques
# ----------------------------------------------------------------------------
addlayer<-function(shp,colorstroke="black",color="blue",thickness=1){
layer <- readShapeSpatial(shp)
if(getinfo.shape(shp)[2]=="5"){plot(layer, border=colorstroke, col=color, lwd=thickness,add=T)}else{} #poly
if(getinfo.shape(shp)[2]=="3"){plot(layer, col=color, lwd=thickness,add=T)}else{} #line
if(getinfo.shape(shp)[2]=="1"){points(layer,cex = 0.1, pch=16, add=T)}else{} #dot
return(getinfo.shape(shp)[2])
}
# ----------------------------------------------------------------------------
# AddJpeg - ajout d'e couches statiques d'images sur un plot
# ----------------------------------------------------------------------------
AddPng<-function(png,x,y,coef)
{
pic <- readPNG(png)
posx <- x
posy <- y
coef <- coef
xsize <-dim (pic)[2] * coef
yisze <-dim (pic)[1] * coef
rasterImage(pic, posx, posy, posx+xsize, posy+yisze)
}
# CREATION DE LA CARTE
imgWidth <-565
imgHeight <-660
coef <-1
resolution <-300
png(filename="maps/emptymap.png", width=imgWidth*coef, height=imgHeight*coef, res=resolution,pointsize = 12)
//png(filename="maps/emptymap_large.png", width=565*3, height=660*3, res=300,pointsize = 12*3,units="px")
initmap(shp="mapkit/background.shp","Func-i","eurostat, 2014")
# BOTTOM
addlayer(shp="mapkit/background.shp",colorstroke="#6E6E6E00",color="#E3E8F7")
addlayer(shp="mapkit/stripes.shp",colorstroke="#E3E8F700",color="#000099")
addlayer(shp="mapkit/other_countries.shp",colorstroke="#FFFFFF",color="#E6DED4",thickness=0.2)
addlayer(shp="mapkit/remote_area_background.shp",colorstroke="#6E6E6E00",color="#E3E8F7")
addlayer(shp="mapkit/other_territories_remote_areas.shp",colorstroke="#FFFFFF",color="#E6DED4",thickness=0.2)
# REPRESENTATION DE LA DONNEE --------------------------------------------------------------------------
fdc <- readShapeSpatial("mapkit/NUTS3_RG_20M_2006.shp")
plot(fdc, col="orange",border="#FFFFFF80",lwd=0.07, add=T)
# -----------------------------------------------------------------------------------------------------
# TOP
#addlayer(shp="mapkit/cyprus_non_espon_space.shp",colorstroke="#FFFFFF",color="#FFFFFF",thickness=0.5)
addlayer(shp="mapkit/boundaries.shp",color="#FFFFFF",thickness=0.2)
addlayer(shp="mapkit/kosovo_line.shp",color="#FFFFFF50",thickness=0.2)
addlayer("mapkit/coasts.shp",color="#D1DBF2",thickness=0.15)
addlayer(shp="mapkit/remote_area_background.shp",colorstroke="#6E6E6E",color="#E3E8F700",thickness=0.2)
addlayer(shp="mapkit/background.shp",colorstroke="#6E6E6E",color="#E3E8F700",thickness=0.2)
addlayer(shp="mapkit/capital_cities_2006.shp")
# TEXTES
# 1 - labels
labels <- read.csv( "mapkit/labels.csv",header=TRUE,sep=",",dec=",",encoding="utf-8")
text(labels$x, labels$y , labels = labels$name,cex=0.115,col="#000000")
labels <- read.csv( "mapkit/remotes_names.csv",header=TRUE,sep=",",dec=",",encoding="utf-8")
text(labels$x+15000, labels$y+40000 , labels = labels$name,adj = c(0,1),cex=0.08,col="#000000")
fdc <- readShapeSpatial("mapkit/background.shp")
x1 <- bbox(fdc)[1]
y1 <- bbox(fdc)[2]
x2 <- bbox(fdc)[3]
y2 <- bbox(fdc)[4]
delta<-25000
text(x2,y1-delta,"Regional level: NUTS3 2010",adj = c(1,1),cex=0.11)
text(x2,y1-delta*3,"© Eurogeographics association for administrative boundaries",adj = c(1,1),cex=0.11)
text(3200000,1300000,"© UMS RIATE, FIT project, 2014",adj = c(0,1),cex=0.15,col="#111111")
# LOGOS
AddPng("mapkit/images/discalmer_ESPON.png",5826700,3000000,2200)
AddPng("mapkit/images/logo_ESPON.png",2650000,y1,2200)
AddPng("mapkit/images/discalmer_EU.png",x1,1020000,2200)
AddPng("mapkit/images/scale.png",5880000,1250000,2200)
dev.off()
library(maptools)
library(RColorBrewer)
library(classInt)
library(png)
setwd("/home/nlambert/Documents/R/func-i")
rm(list=ls())
# ----------------------------------------------------------------------------
# InitMap - crée une nouvelle fenetre graphique avec des parametres à définir
# ----------------------------------------------------------------------------
initmap<-function(shp,title,sources){
#margin<-150000
#y1<-1108037
#y2<-5472735-1600000
margin<-150000
y1<-2108037
y2<-5472735-1600000
x1<-2477834+margin
x2<-6689431-margin
#plot(countries, border="#3C3C3B", col="#3C3C3B",xlim=c(x1,x2), ylim=c(y1,y2), asp = 1,type = "n")
par(omi=c(0,0,0,0), mgp=c(0,0,0),mar=c(0,0,0,0) , family = "D")
par(mfrow=c(1,1),cex=1,cex.lab = 0.75,cex.main=0.2,cex.axis=0.2)
plot.new()
layer <- readShapeSpatial(shp)
plot(layer, col="#FFFFFF00",border="#FFFFFF00",xlim=c(x1,x2), ylim=c(y1,y2))
title(main=title,sub=sources,cex.sub=0.7)
}
# ----------------------------------------------------------------------------
# addlayer - ajout de couches statiques
# ----------------------------------------------------------------------------
addlayer<-function(shp,colorstroke="black",color="blue",thickness=1){
layer <- readShapeSpatial(shp)
if(getinfo.shape(shp)[2]=="5"){plot(layer, border=colorstroke, col=color, lwd=thickness,add=T)}else{} #poly
if(getinfo.shape(shp)[2]=="3"){plot(layer, col=color, lwd=thickness,add=T)}else{} #line
if(getinfo.shape(shp)[2]=="1"){points(layer,cex = 0.1, pch=16, add=T)}else{} #dot
return(getinfo.shape(shp)[2])
}
# ----------------------------------------------------------------------------
# AddJpeg - ajout d'e couches statiques d'images sur un plot
# ----------------------------------------------------------------------------
AddPng<-function(png,x,y,coef)
{
pic <- readPNG(png)
posx <- x
posy <- y
coef <- coef
xsize <-dim (pic)[2] * coef
yisze <-dim (pic)[1] * coef
rasterImage(pic, posx, posy, posx+xsize, posy+yisze)
}
# CREATION DE LA CARTE
imgWidth <-565
imgHeight <-660
coef <-1
resolution <-300
png(filename="maps/emptymap.png", width=imgWidth*coef, height=imgHeight*coef, res=resolution,pointsize = 12)
//png(filename="maps/emptymap_large.png", width=565*3, height=660*3, res=300,pointsize = 12*3,units="px")
initmap(shp="mapkit/background.shp","Func-i","eurostat, 2014")
# BOTTOM
addlayer(shp="mapkit/background.shp",colorstroke="#6E6E6E00",color="#E3E8F7")
addlayer(shp="mapkit/stripes.shp",colorstroke="#E3E8F700",color="#000099")
addlayer(shp="mapkit/other_countries.shp",colorstroke="#FFFFFF",color="#E6DED4",thickness=0.2)
addlayer(shp="mapkit/remote_area_background.shp",colorstroke="#6E6E6E00",color="#E3E8F7")
addlayer(shp="mapkit/other_territories_remote_areas.shp",colorstroke="#FFFFFF",color="#E6DED4",thickness=0.2)
# REPRESENTATION DE LA DONNEE --------------------------------------------------------------------------
fdc <- readShapeSpatial("mapkit/NUTS3_RG_20M_2006.shp")
plot(fdc, col="orange",border="#FFFFFF80",lwd=0.07, add=T)
# -----------------------------------------------------------------------------------------------------
# TOP
#addlayer(shp="mapkit/cyprus_non_espon_space.shp",colorstroke="#FFFFFF",color="#FFFFFF",thickness=0.5)
addlayer(shp="mapkit/boundaries.shp",color="#FFFFFF",thickness=0.2)
addlayer(shp="mapkit/kosovo_line.shp",color="#FFFFFF50",thickness=0.2)
addlayer("mapkit/coasts.shp",color="#D1DBF2",thickness=0.15)
addlayer(shp="mapkit/remote_area_background.shp",colorstroke="#6E6E6E",color="#E3E8F700",thickness=0.2)
addlayer(shp="mapkit/background.shp",colorstroke="#6E6E6E",color="#E3E8F700",thickness=0.2)
addlayer(shp="mapkit/capital_cities_2006.shp")
# TEXTES
# 1 - labels
labels <- read.csv( "mapkit/labels.csv",header=TRUE,sep=",",dec=",",encoding="utf-8")
text(labels$x, labels$y , labels = labels$name,cex=0.115,col="#000000")
labels <- read.csv( "mapkit/remotes_names.csv",header=TRUE,sep=",",dec=",",encoding="utf-8")
text(labels$x+15000, labels$y+40000 , labels = labels$name,adj = c(0,1),cex=0.08,col="#000000")
fdc <- readShapeSpatial("mapkit/background.shp")
x1 <- bbox(fdc)[1]
y1 <- bbox(fdc)[2]
x2 <- bbox(fdc)[3]
y2 <- bbox(fdc)[4]
delta<-25000
text(x2,y1-delta,"Regional level: NUTS3 2010",adj = c(1,1),cex=0.11)
text(x2,y1-delta*3,"© Eurogeographics association for administrative boundaries",adj = c(1,1),cex=0.11)
text(3200000,1300000,"© UMS RIATE, FIT project, 2014",adj = c(0,1),cex=0.15,col="#111111")
# LOGOS
AddPng("mapkit/images/discalmer_ESPON.png",5826700,3000000,2200)
AddPng("mapkit/images/logo_ESPON.png",2650000,y1,2200)
AddPng("mapkit/images/discalmer_EU.png",x1,1020000,2200)
AddPng("mapkit/images/scale.png",5880000,1250000,2200)
dev.off()
setwd("/var/www/html/geomedia/database")
require(rgdal)
mycsv<-read.csv( "input/PaysV4.csv",header=TRUE,sep="\t",dec=".",encoding="latin1",)
head(mycsv)
head(mycsv,100)
mycountries <- unique(mycsv$TAG)
mycountries
mycountries <- data.frame(mycountries,mycountries)
mycountries
mycountries <- unique(mycsv$TAG,mycsv$WORD)
mycountries
mycountries <- unique(mycsv$TAG)
mycountries <- data.frame(mycountries,mycountries)
mycountries
colnames(mycountries) <- c("id","name")
write(datajson, "output/countries.json")
setwd("/var/www/html/geomedia/database")
require(rgdal)
mycsv<-read.csv( "input/PaysV4.csv",header=TRUE,sep="\t",dec=".",encoding="latin1",)
mycountries <- unique(mycsv$TAG)
mycountries <- data.frame(mycountries,mycountries)
colnames(mycountries) <- c("id","name")
datajson <- rjson::toJSON(unname((as.data.frame(t(mycountries)))),method="C")
write(datajson, "output/countries.json")
